---
jobs:
- name: test-domains-broker
  plan:
  - get: broker-src
    trigger: true
  - task: run-tests
    file: broker-src/ci/run-tests.yml

- name: deploy-development
  plan:
  - in_parallel:
    - get: broker-src
      passed: [test-domains-broker]
      trigger: true
    - get: pipeline-tasks
    - get: broker-release
      trigger: true
    - get: stemcell-xenial
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-development
  - task: terraform-secrets
    file: broker-src/ci/terraform-secrets.yml
  - put: development-deployment
    params:
      stemcells:
      - stemcell-xenial/*.tgz
      releases:
      - broker-release/*.tgz
      manifest: broker-src/bosh/manifest.yml
      vars_files:
      - terraform-secrets/terraform.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cf-domains-service-broker on ((cf-api-url-development))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed cf-domains-service-broker on ((cf-api-url-development))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-staging
  plan:
  - in_parallel:
    - get: broker-src
      passed: [test-domains-broker]
      trigger: true
    - get: pipeline-tasks
    - get: broker-release
      trigger: true
    - get: stemcell-xenial
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-staging
  - task: terraform-secrets
    file: broker-src/ci/terraform-secrets.yml
  - put: staging-deployment
    params:
      stemcells:
      - stemcell-xenial/*.tgz
      releases:
      - broker-release/*.tgz
      manifest: broker-src/bosh/manifest.yml
      vars_files:
      - terraform-secrets/terraform.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cf-domains-service-broker on ((cf-api-url-staging))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed cf-domains-service-broker on ((cf-api-url-staging))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-production
  plan:
  - in_parallel:
    - get: broker-src
      passed: [deploy-staging]
      trigger: true
    - get: pipeline-tasks
    - get: broker-release
      passed: [deploy-staging]
      trigger: true
    - get: stemcell-xenial
      trigger: true
    - get: terraform-yaml
      resource: terraform-yaml-production
  - task: terraform-secrets
    file: broker-src/ci/terraform-secrets.yml
  - put: production-deployment
    params:
      stemcells:
      - stemcell-xenial/*.tgz
      releases:
      - broker-release/*.tgz
      manifest: broker-src/bosh/manifest.yml
      vars_files:
      - terraform-secrets/terraform.yml
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cf-domains-service-broker on ((cf-api-url-production))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed cf-domains-service-broker on ((cf-api-url-production))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: broker-src
  type: git
  source:
    uri: ((cf-domains-broker-git-url))
    branch: ((cf-domains-broker-git-branch))

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: broker-release
  type: s3-iam
  source:
    bucket: ((bosh-releases-bucket))
    region_name: ((aws-region))
    regexp: domain-broker-(.*).tgz

- name: stemcell-xenial
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-xenial-go_agent

- name: terraform-yaml-development
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-development))
    region_name: ((aws-region))

- name: terraform-yaml-staging
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-staging))
    region_name: ((aws-region))

- name: development-deployment
  type: bosh-deployment
  source:
    target: ((bosh-target-development))
    client: ((bosh-client-development))
    client_secret: ((bosh-client-secret-development))
    ca_cert: ((ca-cert))
    deployment: domain-broker

- name: staging-deployment
  type: bosh-deployment
  source:
    target: ((bosh-target-staging))
    client: ((bosh-client-staging))
    client_secret: ((bosh-client-secret-staging))
    ca_cert: ((ca-cert))
    deployment: domain-broker

- name: production-deployment
  type: bosh-deployment
  source:
    target: ((bosh-target-production))
    client: ((bosh-client-production))
    client_secret: ((bosh-client-secret-production))
    ca_cert: ((ca-cert))
    deployment: domain-broker

- name: terraform-yaml-production
  type: s3-iam
  source:
    bucket: ((tf-state-bucket))
    versioned_file: ((tf-state-file-production))
    region_name: ((aws-region))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

resource_types:
- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
